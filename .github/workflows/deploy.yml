name: Deploy

on:
  workflow_call:
    secrets:
      TOKEN:
        description: Discord Api Token
        required: true
      CLIENT_ID:
        description: Discord Client Id
        required: true
      GUILD_ID:
        description: Discord server id (to be removed)
        required: true
      AZURE_CREDENTIALS:
        description: Azure Login Creds for Azure CLI
        required: true
      AZURE_VM_NAME:
        description: Name of the Azure VM
        required: true
      AZURE_RESOURCE_GROUP:
        description: Name of the Azure Resource Group where the VM exists.
        required: true
      AZURE_PACKAGE_SCRIPT:
        description: Script to use to package in the VM
      AZURE_DEPLOY_SCRIPT:
        description: Script to use to package in the VM

jobs:
  heart_beat:
    name: Heart Beat
    runs-on: ubuntu-latest
    environment: Main
    outputs:
      power_state: ${{ steps.vm_status.outputs.power_state }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: VM Status
        id: vm_status
        env:
          AZURE_VM_NAME: ${{ secrets.AZURE_VM_NAME }}
        run: |
          power_state=$(az vm list -d --query "[?name=='"${AZURE_VM_NAME}"'].powerState" -o tsv)
          echo "Debugging Power State: $power_state"
          echo "power_state=$power_state" >> $GITHUB_OUTPUT
  wake_up:
    name: Wake Up
    needs: heart_beat
    if: ${{ needs.heart_beat.outputs.power_state }} != 'VM running'
    uses: ./.github/workflows/wake_up.yml
    secrets: inherit

  deploy:
    name: Build, Package, & Deploy
    needs: wake_up
    runs-on: ubuntu-latest
    environment: Main
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build & Package
        env:
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_VM_NAME: ${{ secrets.AZURE_VM_NAME }}
          AZURE_PACKAGE_SCRIPT: ${{ secrets.AZURE_PACKAGE_SCRIPT }}
        run: |
          az vm run-command invoke --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_VM_NAME \
            --command-id RunShellScript --scripts "$AZURE_PACKAGE_SCRIPT" --query "value[].message" --output tsv
      - name: Deploy
        env:
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_VM_NAME: ${{ secrets.AZURE_VM_NAME }}
          AZURE_DEPLOY_SCRIPT: ${{ secrets.AZURE_DEPLOY_SCRIPT }}
        run: |
          az vm run-command invoke --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_VM_NAME \
            --command-id RunShellScript --scripts "$AZURE_DEPLOY_SCRIPT" --query "value[].message" --output tsv
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - name: Install dependencies
        run: npm install
      - name: Deploy commands
        env:
          TOKEN: ${{ secrets.TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          GUILD_ID: ${{ secrets.GUILD_ID }}
        run: npm run deploy-commands
